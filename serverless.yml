service: aws-metric-api

frameworkVersion: '3'
variablesResolutionMode: 20210326
useDotenv: true
configValidationMode: error

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'default'}
  region: ${opt:region, env:AWS_DEFAULT_REGION, 'us-west-1'}
  stackTags:
    Type: App
    GitRepo: aws-metric-api
  stackName: ${self:service}
  versionFunctions: false
  timeout: ${opt:function-timeout-seconds, '60'}
  deploymentBucket:
    name: ${ssm:/serverless-s3-bucket}
    blockPublicAccess: true
    serverSideEncryption: aws:kms
    sseKMSKeyId: ${ssm:metric_serverless_kms_key, null}
  iam:
    role: !Sub arn:aws:iam::${aws:accountId}:role/metric_api_lambda_role
    deploymentRole: arn:aws:iam::${aws:accountId}:role/MetricRoleForServerlessDeploy
  tracing:
    apiGateway: true
    lambda: ${opt:enable-xray, 'true'}
  kmsKeyArn: ${ssm:lambda_kms_key, null}
  environment:
    CONNECT_TIMEOUT_SECONDS: ${opt:connect-timeout-seconds, '60'}
    READ_TIMEOUT_SECONDS: ${opt:read-timeout-seconds, '60'}
    MAX_RETRIES: ${opt:max-retries, '10'}
    LOG_LEVEL: ${opt:log-level, 'INFO'}
    ENABLE_XRAY: ${opt:enable-xray, 'true'}
    REGION: ${self:provider.region}
  logRetentionInDays: 90
  memorySize: 128

package:
  excludeDevDependencies: true
  individually: true
  exclude:
    - ./**

functions:
  api:
    name: aws-metric-api
    description: Provide AWS Metric API for statistics
    handler: wsgi_handler.handler
    memorySize: 1024
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    package:
      include:
        - src/api.py
        - src/helpers/**
        - src/lib/**
    events:
      - http:
          method: any
          path: /
      - http:
          method: any
          path: '{proxy+}'
    environment:
      TTL_DAYS: ${opt:ttl-days, '2'}
      ATHENA_WORKGROUP: ${ssm:${sls:stage}AthenaWorkGroup, ''}
      STACK_NAME: ${sls:stage}

custom:
  resourceNamePrefix: ${self:service}-
  awsAccountId: ${file(./util/sts.js):getAccountId}
  wsgi:
    app: src/api.app
    pythonBin: python3
    packRequirements: false

  pythonRequirements:
    usePipenv: true
    dockerizePip: non-linux
    slim: true
    layer:
      name: ${sls:stage}-metric-api-lib
      description: Third-party packages used by metric api lambda functions
      compatibleRuntimes:
        - python3.8
  prune:
    automatic: true
    number: 10

plugins:
  - '@serverless/safeguards-plugin'
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-plugin-ifelse
  - serverless-prune-plugin
